git diff
- compare file versions in working directory vs staging area

git diff --staged
- compare file versions in staging area vs repository latest commit

git diff commit_id1 commit_id2
- compare two versions of all files contained in two commits

git log
- gives information about what changed in each commit (commit id,
  author, date, notes, list of files changed in the commit, number
  of inserted and deleted lines per file)
  
git checkout
- revert files to the selected commit ID

git clone
- make a copy of an entire Git repository, including the history, onto your own computer
- git clone url

git config --global core.editor "'C:\Program Files (x86)\Notepad++\notepad++.exe' -multiInst -nosession"
git config --global push.default upstream
git config --global merge.conflictstyle diff3

git init
- creates new repository

git status

Folders:
- The Git directory is where Git stores the metadata and object database for your project. This is the most important part of Git, and it is what is copied when you clone a repository from another computer.
- The working directory is a single checkout of one version of the project. These files are pulled out of the compressed database in the Git directory and placed on disk for you to use or modify.
- The staging area is a file, generally contained in your Git directory, that stores information about what will go into your next commit. It’s sometimes referred to as the “index”, but it’s also common to refer to it as the staging area.

git add
- add selected files to the staging area

git reset
- remove selected files from staging area

git checkout [branch-name]
- Switches to the specified branch and updates the working directory
- e.g. git checkout master

tip of a branch
- last commit to the branch

merging
- process of combining two branches

git branch
- get list of branches in the repository
- the branch marked with an asterisk is the current branch (where updates will be made)

git branch [branch-name]
- create new branch


